package Problem_List.Q36_Valid_Sudoku;

public class Solution {
    public boolean isValidSudoku(char[][] board) {
        // Масиви для перевірки рядків, стовпців і підсіток
        boolean[][] rows = new boolean[9][9];
        boolean[][] cols = new boolean[9][9];
        boolean[][] boxes = new boolean[9][9];

        for (int i = 0; i < 9; i++) {
            for (int j = 0; j < 9; j++) {
                // Пропускаємо порожні клітини
                if (board[i][j] == '.') continue;

                int num = board[i][j] - '1'; // Віднімаємо '1' щоб отримати індекс від 0 до 8
                int boxIndex = (i / 3) * 3 + j / 3; // Індекс для підсіток

                // Перевіряємо наявність цифри в рядку, стовпці або підсітці
                if (rows[i][num] || cols[j][num] || boxes[boxIndex][num]) {
                    return false;
                }

                // Відзначаємо, що цифра вже зустрічалась в відповідних структурах
                rows[i][num] = true;
                cols[j][num] = true;
                boxes[boxIndex][num] = true;
            }
        }
        return true;
    }

    public static void main(String[] args) {
        Solution sol = new Solution();

        // Приклад 1
        char[][] board1 = {
                {'5','3','.','.','7','.','.','.','.'},
                {'6','.','.','1','9','5','.','.','.'},
                {'.','9','8','.','.','.','.','6','.'},
                {'8','.','.','.','6','.','.','.','3'},
                {'4','.','.','8','.','3','.','.','1'},
                {'7','.','.','.','2','.','.','.','6'},
                {'.','6','.','.','.','.','2','8','.'},
                {'.','.','.','4','1','9','.','.','5'},
                {'.','.','.','.','8','.','.','7','9'}
        };
        System.out.println(sol.isValidSudoku(board1));  // Виведе true

        // Приклад 2
        char[][] board2 = {
                {'8','3','.','.','7','.','.','.','.'},
                {'6','.','.','1','9','5','.','.','.'},
                {'.','9','8','.','.','.','.','6','.'},
                {'8','.','.','.','6','.','.','.','3'},
                {'4','.','.','8','.','3','.','.','1'},
                {'7','.','.','.','2','.','.','.','6'},
                {'.','6','.','.','.','.','2','8','.'},
                {'.','.','.','4','1','9','.','.','5'},
                {'.','.','.','.','8','.','.','7','9'}
        };
        System.out.println(sol.isValidSudoku(board2));  // Виведе false
    }
}

